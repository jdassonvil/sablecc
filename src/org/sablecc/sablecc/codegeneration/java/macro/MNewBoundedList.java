/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.java.macro;

import java.util.*;

public class MNewBoundedList {

    private final String pListName;

    private final String pListType;

    private final String pLowerBound;

    private final String pUpperBound;

    private final MNewBoundedList mNewBoundedList = this;

    private final List<Object> eNormalParameter_NewParameter = new LinkedList<Object>();

    private final List<Object> eAddElement_AddList = new LinkedList<Object>();

    MNewBoundedList(
            String pListName,
            String pListType,
            String pLowerBound,
            String pUpperBound) {

        if (pListName == null) {
            throw new NullPointerException();
        }
        this.pListName = pListName;
        if (pListType == null) {
            throw new NullPointerException();
        }
        this.pListType = pListType;
        if (pLowerBound == null) {
            throw new NullPointerException();
        }
        this.pLowerBound = pLowerBound;
        if (pUpperBound == null) {
            throw new NullPointerException();
        }
        this.pUpperBound = pUpperBound;
    }

    public MNormalParameter newNormalParameter(
            String pElementType,
            String pElementName,
            String pIndex) {

        MNormalParameter lNormalParameter = new MNormalParameter(pElementType,
                pElementName, pIndex);
        this.eNormalParameter_NewParameter.add(lNormalParameter);
        return lNormalParameter;
    }

    public MNewParameter newNewParameter(
            String pElementName) {

        MNewParameter lNewParameter = new MNewParameter(pElementName);
        this.eNormalParameter_NewParameter.add(lNewParameter);
        return lNewParameter;
    }

    public MAddElement newAddElement(
            String pListName,
            String pElementName) {

        MAddElement lAddElement = new MAddElement(pListName, pElementName);
        this.eAddElement_AddList.add(lAddElement);
        return lAddElement;
    }

    public MAddList newAddList(
            String pListName,
            String pElementName) {

        MAddList lAddList = new MAddList(pListName, pElementName);
        this.eAddElement_AddList.add(lAddList);
        return lAddList;
    }

    String pListName() {

        return this.pListName;
    }

    String pListType() {

        return this.pListType;
    }

    String pLowerBound() {

        return this.pLowerBound;
    }

    String pUpperBound() {

        return this.pUpperBound;
    }

    private String rListType() {

        return this.mNewBoundedList.pListType();
    }

    private String rListName() {

        return this.mNewBoundedList.pListName();
    }

    private String rLowerBound() {

        return this.mNewBoundedList.pLowerBound();
    }

    private String rUpperBound() {

        return this.mNewBoundedList.pUpperBound();
    }

    @Override
    public String toString() {

        StringBuilder sb = new StringBuilder();
        sb.append("NodeList<");
        sb.append(rListType());
        sb.append("> ");
        sb.append(rListName());
        sb.append(" = new NodeList<");
        sb.append(rListType());
        sb.append(">(");
        sb.append(rLowerBound());
        sb.append(",");
        sb.append(rUpperBound());
        sb.append(",");
        for (Object oNormalParameter_NewParameter : this.eNormalParameter_NewParameter) {
            sb.append(oNormalParameter_NewParameter.toString());
        }
        sb.append(");");
        sb.append(System.getProperty("line.separator"));
        sb.append("	");
        for (Object oAddElement_AddList : this.eAddElement_AddList) {
            sb.append(oAddElement_AddList.toString());
        }
        return sb.toString();
    }

}
