/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.java.macro;

import java.util.*;

public class MReduceDecision {

    private final MReduce mReduce;

    private final List<Object> eAddLToForest_AddNullToForest_AddNToForest = new LinkedList<Object>();

    private final List<Object> eNewTreeClass = new LinkedList<Object>();

    private final List<Object> eNewList = new LinkedList<Object>();

    private final List<Object> eNewBoundedList = new LinkedList<Object>();

    MReduceDecision(
            MReduce mReduce) {

        if (mReduce == null) {
            throw new NullPointerException();
        }
        this.mReduce = mReduce;
    }

    public MNewTreeClass newNewTreeClass(
            String pElementType,
            String pElementName) {

        MNewTreeClass lNewTreeClass = new MNewTreeClass(pElementType,
                pElementName);
        this.eNewTreeClass.add(lNewTreeClass);
        return lNewTreeClass;
    }

    public MNewList newNewList(
            String pListName,
            String pListType,
            String pLowerBound) {

        MNewList lNewList = new MNewList(pListName, pListType, pLowerBound);
        this.eNewList.add(lNewList);
        return lNewList;
    }

    public MNewBoundedList newNewBoundedList(
            String pListName,
            String pListType,
            String pLowerBound,
            String pUpperBound) {

        MNewBoundedList lNewBoundedList = new MNewBoundedList(pListName,
                pListType, pLowerBound, pUpperBound);
        this.eNewBoundedList.add(lNewBoundedList);
        return lNewBoundedList;
    }

    public MAddLToForest newAddLToForest(
            String pElementName) {

        MAddLToForest lAddLToForest = new MAddLToForest(pElementName);
        this.eAddLToForest_AddNullToForest_AddNToForest.add(lAddLToForest);
        return lAddLToForest;
    }

    public MAddNullToForest newAddNullToForest() {

        MAddNullToForest lAddNullToForest = new MAddNullToForest();
        this.eAddLToForest_AddNullToForest_AddNToForest.add(lAddNullToForest);
        return lAddNullToForest;
    }

    public MAddNToForest newAddNToForest(
            String pElementName) {

        MAddNToForest lAddNToForest = new MAddNToForest(pElementName);
        this.eAddLToForest_AddNullToForest_AddNToForest.add(lAddNToForest);
        return lAddNToForest;
    }

    private String rReducedProduction() {

        return this.mReduce.pReducedProduction();
    }

    @Override
    public String toString() {

        StringBuilder sb = new StringBuilder();
        sb.append("      List<Node> trees = new LinkedList<Node>();");
        sb.append(System.getProperty("line.separator"));
        for (Object oNewTreeClass : this.eNewTreeClass) {
            sb.append(oNewTreeClass.toString());
        }
        for (Object oNewList : this.eNewList) {
            sb.append(oNewList.toString());
        }
        for (Object oNewBoundedList : this.eNewBoundedList) {
            sb.append(oNewBoundedList.toString());
        }
        for (Object oAddLToForest_AddNullToForest_AddNToForest : this.eAddLToForest_AddNullToForest_AddNToForest) {
            sb.append(oAddLToForest_AddNullToForest_AddNToForest.toString());
        }
        sb.append("      stack.push(new AbstractForest(CSTProductionType.P_");
        sb.append(rReducedProduction());
        sb.append(",trees, stack.getState().getTarget(CSTProductionType.P_");
        sb.append(rReducedProduction());
        sb.append("));");
        sb.append(System.getProperty("line.separator"));
        return sb.toString();
    }

}
